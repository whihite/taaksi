// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace taaksi.Models;

public partial class taksiContext : DbContext
{
    public taksiContext()
    {
    }

    public taksiContext(DbContextOptions<taksiContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Car> Cars { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Discount> Discounts { get; set; }

    public virtual DbSet<Driver> Drivers { get; set; }

    public virtual DbSet<DriverRating> DriverRatings { get; set; }

    public virtual DbSet<Mileage> Mileages { get; set; }

    public virtual DbSet<PaymentTransaction> PaymentTransactions { get; set; }

    public virtual DbSet<PricingPolicy> PricingPolicies { get; set; }

    public virtual DbSet<RentalRequest> RentalRequests { get; set; }

    public virtual DbSet<Trip> Trips { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-410JK39\\SQLEXPRSS;Initial Catalog=taksi;Integrated Security=True;Multiple Active Result Sets=True;Encrypt=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Car>(entity =>
        {
            entity.HasKey(e => e.CarId).HasName("PK__Cars__68A0340ED8E98771");

            entity.Property(e => e.CarId)
                .ValueGeneratedNever()
                .HasColumnName("CarID");
            entity.Property(e => e.CurrentDriverId).HasColumnName("CurrentDriverID");
            entity.Property(e => e.Make).HasMaxLength(100);
            entity.Property(e => e.Model).HasMaxLength(100);
            entity.Property(e => e.PlateNumber).HasMaxLength(20);

            entity.HasOne(d => d.CurrentDriver).WithMany(p => p.Cars)
                .HasForeignKey(d => d.CurrentDriverId)
                .HasConstraintName("FK__Cars__CurrentDri__3B75D760");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__A4AE64B83A925B06");

            entity.Property(e => e.CustomerId)
                .ValueGeneratedNever()
                .HasColumnName("CustomerID");
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FirstName).HasMaxLength(50);
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(15);
        });

        modelBuilder.Entity<Discount>(entity =>
        {
            entity.HasKey(e => e.DiscountId).HasName("PK__Discount__E43F6DF684F892E5");

            entity.Property(e => e.DiscountId)
                .ValueGeneratedNever()
                .HasColumnName("DiscountID");
            entity.Property(e => e.DiscountAmount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.DiscountCode).HasMaxLength(20);
            entity.Property(e => e.ValidFrom).HasColumnType("datetime");
            entity.Property(e => e.ValidTo).HasColumnType("datetime");
        });

        modelBuilder.Entity<Driver>(entity =>
        {
            entity.HasKey(e => e.DriverId).HasName("PK__Drivers__F1B1CD24DF6DC4A0");

            entity.Property(e => e.DriverId)
                .ValueGeneratedNever()
                .HasColumnName("DriverID");
            entity.Property(e => e.FirstName).HasMaxLength(50);
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.LicenseNumber).HasMaxLength(20);
            entity.Property(e => e.PhoneNumber).HasMaxLength(15);
        });

        modelBuilder.Entity<DriverRating>(entity =>
        {
            entity.HasKey(e => e.RatingId).HasName("PK__DriverRa__FCCDF85C1B1899E7");

            entity.Property(e => e.RatingId)
                .ValueGeneratedNever()
                .HasColumnName("RatingID");
            entity.Property(e => e.Comment).HasMaxLength(255);
            entity.Property(e => e.DriverId).HasColumnName("DriverID");
            entity.Property(e => e.Rating).HasColumnType("decimal(3, 2)");

            entity.HasOne(d => d.Driver).WithMany(p => p.DriverRatings)
                .HasForeignKey(d => d.DriverId)
                .HasConstraintName("FK__DriverRat__Drive__47DBAE45");
        });

        modelBuilder.Entity<Mileage>(entity =>
        {
            entity.HasKey(e => e.MileageId).HasName("PK__Mileage__55D6FCECF1BCEE81");

            entity.ToTable("Mileage");

            entity.Property(e => e.MileageId)
                .ValueGeneratedNever()
                .HasColumnName("MileageID");
            entity.Property(e => e.CarId).HasColumnName("CarID");
            entity.Property(e => e.DateRecorded).HasColumnType("date");
            entity.Property(e => e.Mileage1)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("Mileage");

            entity.HasOne(d => d.Car).WithMany(p => p.Mileages)
                .HasForeignKey(d => d.CarId)
                .HasConstraintName("FK__Mileage__CarID__4316F928");
        });

        modelBuilder.Entity<PaymentTransaction>(entity =>
        {
            entity.HasKey(e => e.TransactionId).HasName("PK__PaymentT__55433A4B62DCB4CE");

            entity.Property(e => e.TransactionId)
                .ValueGeneratedNever()
                .HasColumnName("TransactionID");
            entity.Property(e => e.Amount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.PaymentDate).HasColumnType("datetime");
            entity.Property(e => e.TripId).HasColumnName("TripID");

            entity.HasOne(d => d.Customer).WithMany(p => p.PaymentTransactions)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK__PaymentTr__Custo__4D94879B");

            entity.HasOne(d => d.Trip).WithMany(p => p.PaymentTransactions)
                .HasForeignKey(d => d.TripId)
                .HasConstraintName("FK__PaymentTr__TripI__4E88ABD4");
        });

        modelBuilder.Entity<PricingPolicy>(entity =>
        {
            entity.HasKey(e => e.PolicyId).HasName("PK__PricingP__2E1339440AE332FE");

            entity.ToTable("PricingPolicy");

            entity.Property(e => e.PolicyId)
                .ValueGeneratedNever()
                .HasColumnName("PolicyID");
            entity.Property(e => e.BaseFare).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CarType).HasMaxLength(50);
            entity.Property(e => e.PerMileRate).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<RentalRequest>(entity =>
        {
            entity.HasKey(e => e.RequestId).HasName("PK__RentalRe__33A8519A5684261A");

            entity.Property(e => e.RequestId)
                .ValueGeneratedNever()
                .HasColumnName("RequestID");
            entity.Property(e => e.CarType).HasMaxLength(50);
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.StartTime).HasColumnType("datetime");

            entity.HasOne(d => d.Customer).WithMany(p => p.RentalRequests)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK__RentalReq__Custo__4AB81AF0");
        });

        modelBuilder.Entity<Trip>(entity =>
        {
            entity.HasKey(e => e.TripId).HasName("PK__Trips__51DC711ED7C6F74F");

            entity.Property(e => e.TripId)
                .ValueGeneratedNever()
                .HasColumnName("TripID");
            entity.Property(e => e.CarId).HasColumnName("CarID");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.DriverId).HasColumnName("DriverID");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.Fare).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.StartTime).HasColumnType("datetime");

            entity.HasOne(d => d.Car).WithMany(p => p.Trips)
                .HasForeignKey(d => d.CarId)
                .HasConstraintName("FK__Trips__CarID__403A8C7D");

            entity.HasOne(d => d.Customer).WithMany(p => p.Trips)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK__Trips__CustomerI__3F466844");

            entity.HasOne(d => d.Driver).WithMany(p => p.Trips)
                .HasForeignKey(d => d.DriverId)
                .HasConstraintName("FK__Trips__DriverID__3E52440B");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}